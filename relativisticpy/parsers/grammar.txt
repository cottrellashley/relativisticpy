statements      :   NEWLINE* statement (NEWLINE* statement)

statement       :   KEYWORD:print? expr

expr            :   (ID) EQUAL expr
                :   bool-expr ((KEYWORD:and|KEYWORD:or) bool-expr)*

bool-expr       :   NOT bool-expr
                :   arith-expr ((EQEQUAL|LESS|GREATER|LESSEQUAL|GREATEREQUAL) arith-expr)*

arith-expr      :   term ((PLUS|MINUS) term)*

term            :   factor ((MUL|DIV) factor)*
                :   SYMBOL (SYMBOL)*

factor          :   (PLUS|MINUS) factor
                :   power

power           :   atom ((CIRCUMFLEX|DOUBLESTAR) atom)*

atom            :   INT|FLOAT|STRING|BOOL|ID|SYMBOL|TENSORID|FUNCTIONID
                :   LPAR expr RPAR
                :   array
                :   func-def
                :   tensor
                :   sum

tensor          :   TENSORID ((UNDER|CIRCUMFLEX) LBRACE (ID ((EQUAL|COLON) (INT|atom))?)* RBRACE )*
                :   tensor ((EQUAL) expr)?
                :   tensor ((EQUAL) array)?
                :   tensor ((COLONEQUAL) array)?
                :   tensor tensor*

array           :   LSQB NEWLINE* (expr (COMMA NEWLINE* expr)* NEWLINE* RSQB) 

matrix          :   BEGIN LBRACE ID:matrix RBRACE NEWLINE* expr ( '&' NEWLINE* expr )* NEWLINE* ('\\' NEWLINE* expr ( '&' NEWLINE* expr )* )* NEWLINE* END LBRACE ID:matrix RBRACE

sum             :   SUM UNDER LBRACE expr RBRACE CIRCUMFLEX LBRACE expr RBRACE expr

func-def        :   FUNCTIONID? LPAR (ID (COMMA ID)*)? RPAR (EQUAL expr NEWLINE) ((EQUAL) expr)?

